<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Sprachbund</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/lesson.css">
    <link rel="icon" href="{{seo.img}}">
    <link rel="apple-touch-icon" href="{{seo.img}}">
    
    <meta name="description" content="{{page.top}}" />
    <meta name="keywords" content="" />
    <meta name="author" content="Learn" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="index, follow">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="theme-color" content="{{seo.theme-color}}">
    <meta name="canonical" content="{{seo.url}}">
    
    <meta name="hreflang" content="en-US">
    
    <meta name="msapplication-TileColor" content="{{seo.theme-color}}">
    <meta name="msapplication-TileImage" content="{{seo.img}}">
    <meta name="msapplication-tooltip" content="{{seo.name}}"> 
  
    <meta property="og:title" content="{{seo.name}}">
    <meta property="og:type" content="website">
    <meta property="og:image" content="{{seo.img}}">
    <meta property="og:url" content="{{seo.url}}">
    <meta property="og:description" content="{{seo.description}}">
    <meta property="og:site_name" content="{{seo.name}}">
    
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="{{seo.name}}">
    <meta name="twitter:description" content="{{seo.description}}">
    <meta name="twitter:image" content="{{seo.img}}">
    
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="format-detection" content="telephone=no">
  </head>
  <body onload="startLesson()">
    <header>
      <div class="language-flag"><svg><image href="/svg/flag.svg" xlink:href="/svg/flag.svg"></image></svg></div>
      <div class="progress-bar {{#if isTest}}test{{/if}}"><div class="progress" id="progress"></div></div>
      {{#if isTest}}
      <div class="health">
        <i class="fa-solid fa-heart"></i>
        <i class="fa-solid fa-heart"></i>
        <i class="fa-solid fa-heart"></i>
      </div>
      {{/if}}
      <div class="progress-count"><span id="progress-count">0/{{lessons.length}}</span>&nbsp;&middot;&nbsp;<span id="client-timer">0:00</span></div>
    </header>
    <main>
      {{#each lessons as |lesson|}}
      <div class="section">
      {{#if (eq lesson.type "comprehension")}}
        <p class="heading"><i class="fa-solid fa-magnifying-glass"></i> Read this carefully!</p>
        <div class="div-border scale">{{lesson.prompt}}</div>
        <p class="p-text">{{lesson.question}}</p>
        <br>
        <div class="btn-container" id="buttons-{{@index}}">{{#each choices}}<a class="answer-btn button" onclick="selectBtn(this)">{{this}}</a>{{/each}}</div>
      {{else if (eq lesson.type "conversation")}}
        <p class="heading"><i class="fa-solid fa-phone"></i> Read this conversation!</p>
        <div class="conversations">
        {{#each lesson.conversation}}
          <div class="conversation">{{hover-translate this "foreign"}}</div>
        {{/each}}
        </div> 
        <p class="p-text">{{lesson.prompt}}</p>
        <br>
        <div class="btn-container" id="buttons-{{@index}}">{{#each choices}}<a class="answer-btn button" onclick="selectBtn(this)">{{this}}</a>{{/each}}</div>
      {{else if (eq lesson.type "fill-in-the-blank")}}
        <p class="heading"><i class="fa-solid fa-pen-to-square"></i> Fill in the blank!</p>
        <div class="div-border scale">{{#if ../isTest}}{{lesson.prompt}}{{else}}{{hover-translate lesson.prompt "foreign"}}{{/if}}</div>
        <p class="p-text">Which word completes the sentence?</p>
        <br>
        <div class="btn-container" id="buttons-{{@index}}">{{#each choices}}<a class="answer-btn button" onclick="selectBtn(this)">{{this}}</a>{{/each}}</div>
      {{else if (eq lesson.type "grammar")}}
        <p class="heading"><i class="fa-solid fa-shapes"></i> But first!</p>
        <p class="p-text">{{tip-format lesson.description}}</p>
        {{#if lesson.syntax}}
        {{#each lesson.syntax.sentences}}
        <div class="div-border">
          <div class="p-text center">{{hover-translate phrase "foreign"}}</div>
          <p class="p-small center">{{meaning}}</p>
        </div>
        {{/each}}
        {{/if}}
      {{else if (eq lesson.type "match")}}
        <p class="heading"><i class="fa-solid fa-motorcycle"></i> Match these terms!</p>
        <div class="btn-container half" id="foreign-{{@index}}">{{#each foreign}}<a class="answer-btn button" onclick="select(this)" id="foreign-{{@../index}}-{{@index}}">{{this}}</a>{{/each}}</div>
        <div class="btn-container half" id="native-{{@index}}">{{#each native}}<a class="answer-btn button" onclick="select(this)" id="native-{{@../index}}-{{@index}}">{{this}}</a>{{/each}}</div>
      {{else if (eq lesson.type "short-response")}}
        <p class="heading"><i class="fa-solid fa-pen-nib"></i> Try this!</p>
        <div class="div-border scale">
          {{log ../isTest}}=
          {{#if ../isTest}}
          {{lesson.prompt}}
          {{else}}
          {{hover-translate lesson.prompt (ternaryEq lesson.direction "native-foreign" "native" "foreign")}}
          {{/if}}
        </div>
        <div class="response"><textarea class="textbox" id="response-{{@index}}" placeholder="Type in {{#if (eq lesson.direction "native-foreign")}}Nóri{{else}}English{{/if}}" {{#if (eq lesson.direction "foreign-native")}}autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"{{/if}} inputmode="search" enterkeyhint="go"></textarea></div>
        <div class="insert-buttons">
          <a class="button" onclick="caseshift()" id="shift-case">⬆</a>
          <a class="button letter" onclick="insert('á')">á</a>
          <a class="button letter" onclick="insert('ć')">ć</a>
          <a class="button letter" onclick="insert('é')">é</a>
          <a class="button letter" onclick="insert('ó')">ó</a>
        </div>
      {{else if (eq lesson.type "vocabulary")}}
        <p class="heading"><i class="fa-solid fa-champagne-glasses"></i> Let's have a toast!</p>
        <div class="div-border">
          <p class="root merienda">{{lesson.word}}</p>
          <p><span class="context highlight">{{get-attribute lesson.word "pos"}}</span>	&middot; <span class="ipa">/{{get-attribute lesson.word "ipa"}}/</span></p>
          <hr class="divider">
          <p class="meaning">{{get-attribute lesson.word "definition"}}</p>
        </div>
        {{#if lesson.example}}
        <p class="p-text"><i class="fa-solid fa-message"></i> Example</p>
        <div class="div-border">
          <p>{{tip-format example.sentence}}</p>
          <p class="translation"><span class="highlight">"</span>{{tip-format example.translation}}<span class="highlight">"</span></p>
        </div>
        {{/if}}
        {{#if lesson.tip}}
        <p class="p-text"><i class="fa-solid fa-lightbulb"></i> Tip</p>
        <div class="div-border scale"><p class="tip">{{tip-format lesson.tip}}</p></div>
        {{/if}}
        {{/if}}
      </div>
    {{/each}}
      <div class="section congrats">
        <p class="heading">You did it!</p>
        <p class="p-text" id="final-text"></p>
        <div class="statistic">
          <p class="scale">Score</p>
          <p class="inner scale" id="percentage"></p>
        </div>
        <div class="statistic">
          <p class="scale">Time</p>
          <p class="inner scale" id="timer"></p>
        </div>
      </div>
      <div class="alert" id="alert">
        <div class="text">
          <p class="heading" id="alert-heading"></p>
          <p class="description" id="alert-description"></p>
        </div>
        <div class="btn-container"><a class="button" id="continue-btn">Continue</a></div>
      </div>
    </main>
    <footer id="footer">
      <a class="button" href="/">Exit</a>
      <a class="button" id="next" onclick="checkAnswer()">Check</a>
    </footer>
  </body>
  <script type="text/javascript">
    let lessons = JSON.parse('{{{json lessons}}}');
  </script>
  <script>
    let index = 0;

    let wrong = 0;
    let seconds = 0;

    let hearts = 3;

    let selection = undefined;
    let timerInterval;
    
    let lesson;
    
    let correct   = new Audio("/sfx/correct.wav");
    let incorrect = new Audio("/sfx/incorrect.mp3");

    document.onkeydown = (event) => {
      if (event.key === "Enter") {
        event.preventDefault();
        if (document.getElementById("alert").classList.contains("block")) setTimeout(() => alert(), 350);
        else if (lesson.type != "match") checkAnswer();
      }
    }
    document.getElementById("alert").onclick = () => { alert(); }

    function startLesson() {
      startTimer();
      lesson = lessons[index];
      document.getElementsByClassName("section")[index].style.display = "inline-block";
    }

    function endLesson() {
      stopTimer();
      let percentage = (lessons.length / (index + wrong) * 100).toFixed(2);
      document.getElementById("percentage").innerText = `${percentage}%`;
      document.getElementById("timer").innerText = document.getElementById("client-timer").innerText;
      if (percentage >= 90) document.getElementById("final-text").innerText = "Aren't you a smart cookie?";
      else if (percentage >= 70) document.getElementById("final-text").innerText = "Such a valiant effort!";
      else document.getElementById("final-text").innerText = "You'll get it next time!";
      document.getElementById("footer").innerHTML = "<a class=\"button finish-button\" onclick=\"completeLesson()\">Good job!</a>";
      document.getElementsByClassName("section")[index].style.display = "inline-block";
    }

    function completeLesson() {
      let last = localStorage.getItem("{{id}}");
      if (last === "test") {
        localStorage.setItem("{{id}}", "review");
        localStorage.setItem("score", parseInt(localStorage.getItem("score")) + 1);
      }
      else if (last != "review") localStorage.setItem("{{id}}", parseInt(last) >= {{modlen}} - 3 ? "test" : parseInt(last) + 1);
      window.location = "/learn";
    }

    function startTimer() {
      timerInterval = setInterval(function() {
        seconds++;
        document.getElementById("client-timer").innerHTML = `${Math.floor(seconds/60)}:${(seconds-(Math.floor(seconds/60)*60)).toString().padStart(2, '0')}`;
      }, 1000);
    }
    function stopTimer() { clearInterval(timerInterval); }

    function formatAnswer(text) { return text.toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`'\?~()]/g, "").replace(/\s{2,}/g, " ").trimEnd().trimStart(); }
    
    function caseshift() {
      document.getElementById("shift-case").innerHTML = document.getElementById("shift-case").innerHTML == "⬇" ? "⬆" : "⬇";
      for (var letter of document.getElementsByClassName("letter")) { letter.classList.toggle("upper"); }
    }

    function insert(character) {
      let resp = document.getElementById("response-" + index);
      resp.setRangeText(document.getElementById("shift-case").innerHTML == "⬇" ? character.toUpperCase() : character, resp.selectionStart, resp.selectionEnd, 'select');
      resp.focus();
      resp.selectionStart = resp.selectionEnd;
    }

    function alert() {
      selectBtn(selection);
      document.getElementById("alert").classList.remove("block");
      if ({{isTest}} && hearts <= 0) window.location = "/learn";
      else if (lessons[index] !== lesson) nextLesson();
    }
    
    function setAlert(heading, caption) {
      document.getElementById("alert-heading").innerHTML = heading;
      document.getElementById("alert-description").innerHTML = caption;
      document.getElementById("alert").classList.add("block");
    }
    
    function correctAnswer(heading, caption) {
      playCorrect();
      setAlert(heading, caption);

      index++;
      document.getElementById("progress").style.width = `${100 * index / lessons.length}%`;
      document.getElementById("progress-count").innerText = `${index}/${lessons.length}`;
    }

    function incorrectAnswer(heading, caption) {
      wrong++;
      playIncorrect();
      if ({{isTest}}) {
        hearts--;
        let change = document.getElementsByClassName("fa-heart")[0];
        change.classList.toggle("fa-heart-broken");
        change.classList.toggle("fa-heart");
      }

      if (hearts == 0) {
        document.getElementById("continue-btn").innerText = "Exit";
        document.getElementById("continue-btn").setAttribute("href", "/learn");
        setAlert("Good effort!", caption);
      } else setAlert(heading, caption);
    }

    function playCorrect() {
      incorrect.pause();
      correct.pause();
      correct.currentTime = 0;
      correct.play();
    }

    function playIncorrect() {
      correct.pause();
      incorrect.pause();
      incorrect.currentTime = 0;
      incorrect.play();
    }

    function nextLesson() {
      document.getElementsByClassName("section")[index - 1].style.display = "none";
      if (index === lessons.length) return endLesson();
      else if (index > lessons.length) return completeLesson();

      lesson = lessons[index];
      document.getElementById("next").style.display = lesson.type != "match" ? "inline-flex" : "none";
      document.getElementById("next").innerText = lesson.type == "vocabulary" || lesson.type == "grammar" ? "Got it!" : "Check";

      if (lesson.type === "match") {
        shuffleDivs("foreign-" + index.toString());
        shuffleDivs("native-" + index.toString());
      } else if (lesson.type === "comprehension" || lesson.type === "conversation" || lesson.type === "fill-in-the-blank") shuffleDivs("buttons-" + index.toString());
      
      document.getElementsByClassName("section")[index].style.display = "inline-block";
    }

    function checkAnswer() {
      if (((lesson.type === "comprehension" || lesson.type === "conversation" || lesson.type === "fill-in-the-blank") && selection.text === lesson.answer) || (lesson.type === "short-response" && lesson.answers.find(chance => formatAnswer(chance) === formatAnswer(document.getElementById("response-" + index).value))) || lesson.type === "match") correctAnswer("<i class=\"fas fa-circle-check\"></i> Correct!", "You did it!"); 
      else if (lesson.type === "grammar" || lesson.type === "vocabulary") correctAnswer("<i class=\"fas fa-circle-info\"></i> Keep it in mind!", "Let's see this word in action!");
      else if ((lesson.type === "fill-in-the-blank" || lesson.type === "comprehension") && selection === undefined || lesson.type === "short-response" && document.getElementById("response-" + index).value === "") setAlert("<i class=\"fas fa-circle-times\"></i> Please answer!", "Tap or click on the correct response.");
      else incorrectAnswer("<i class=\"fas fa-circle-times\"></i> Try again!", "Hover over words you don't know if you need to.");
    }
    
    function select(self) {
      if (document.getElementById("alert").classList.contains("block")) document.getElementById("alert").classList.remove("block");
      if (selection === undefined || selection === self) { selectBtn(self); return; }
      
      let idx = selection.id.split("-").slice(1).join("-");
      if (idx === self.id.split("-").slice(1).join("-")) {
        playCorrect();
        document.getElementById("foreign-" + idx).classList.add("match-correct");
        document.getElementById("foreign-" + idx).classList.remove("button", "answer-btn", "selected");
        document.getElementById("foreign-" + idx).removeAttribute('onclick');

        document.getElementById("native-" + idx).classList.add("match-correct");
        document.getElementById("native-" + idx).classList.remove("button", "answer-btn", "selected");
        document.getElementById("native-" + idx).removeAttribute('onclick');
      } else incorrectAnswer("<i class=\"fas fa-circle-times\"></i> Oops!", "Try Again");
      
      selectBtn(selection);
      if (document.getElementById("native-" + index).getElementsByClassName("button").length === 0) checkAnswer();
    }

    function selectBtn(self) {
      if (selection != undefined) selection.classList.remove("selected");
      selection = self === selection ? undefined : self;
      if (selection != undefined) selection.classList.add("selected");
    }
    
    function shuffleDivs(containerId) {
      if (!document.getElementById(containerId)) return;
      const container = document.getElementById(containerId);
      const divs = Array.from(container.children);

      for (let i = divs.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [divs[i], divs[j]] = [divs[j], divs[i]];
      }
      divs.forEach(div => container.appendChild(div));
    } 
  </script>
</html>